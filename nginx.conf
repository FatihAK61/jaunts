events {
    worker_connections 1024;
}

http {
    upstream app {
        # Container service adını kullan, IP değil
        server jaunts:8080 max_fails=3 fail_timeout=30s;
    }

    # Upstream retry ayarları
    proxy_next_upstream error timeout http_502 http_503 http_504;

    server {
        listen 80;
        server_name _;

        location / {
            # Önce jaunts servisinin hazır olup olmadığını kontrol et
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Timeout ayarları
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # Retry ayarları
            proxy_next_upstream error timeout http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 10s;
        }

        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Uygulama health check'ini de proxy'le
        location /actuator/health {
            proxy_pass http://app;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
