events {
    worker_connections 1024;
}

http {
    # Upstream tanımla
    upstream jaunts_backend {
        server jaunts-container:8080 max_fails=3 fail_timeout=30s;
    }

    server {
        listen 80;
        server_name _;

        # Ana proxy location
        location / {
            proxy_pass http://jaunts_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Optimize edilmiş timeout'lar
            proxy_connect_timeout 10s;
            proxy_send_timeout 15s;
            proxy_read_timeout 15s;

            # Connection keep-alive
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # Nginx kendi health check'i
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Uygulama health check - retry logic ile
        location /actuator/health {
            proxy_pass http://jaunts_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Health check için özel timeout'lar
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;

            # Hata durumunda 503 döndür
            proxy_intercept_errors on;
            error_page 502 503 504 @backend_down;
        }

        location @backend_down {
            return 503 "Backend is starting up...";
            add_header Content-Type text/plain;
        }
    }
}
